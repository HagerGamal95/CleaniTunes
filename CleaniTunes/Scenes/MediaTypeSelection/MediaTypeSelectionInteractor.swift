//
//  MediaTypeSelectionInteractor.swift
//  CleaniTunes
//
//  Created by hager gamal on 1/29/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MediaTypeSelectionBusinessLogic {
    func getMediaTypes()
}

protocol MediaTypeSelectionDataStore {
    var mediaTypes: [MediaType] { get set }
    var selectedMediaTypes: [String] {get set}
}
typealias MediaType = MediaTypeSelection.GetMediaType.ViewModel.MediaType

class MediaTypeSelectionInteractor: MediaTypeSelectionBusinessLogic, MediaTypeSelectionDataStore {
    
    var selectedMediaTypes: [String] = []
    var presenter: MediaTypeSelectionPresentationLogic?
    
    var mediaTypes: [MediaTypeSelection.GetMediaType.ViewModel.MediaType] = [MediaType(title: "album", isSelected: false, displayedTitle: "Album"), MediaType(title: "artist", isSelected: false, displayedTitle: "Artist"), MediaType(title: "audiobook", isSelected: false, displayedTitle: "Audio Book"), MediaType(title: "movie", isSelected: false, displayedTitle: "Movie"), MediaType(title: "musicVideo", isSelected: false, displayedTitle: "Music Video"), MediaType(title: "podcast", isSelected: false, displayedTitle: "Podcast"), MediaType(title: "song", isSelected: false, displayedTitle: "Song")]
    
    // MARK: get MediaTypes
    
    func getMediaTypes() {
        
        //update selection for selectedMediaTypes from previous screen
        for selectedMediaType in selectedMediaTypes {
            if let index = mediaTypes.firstIndex(where: { (mediaType) -> Bool in
                mediaType.displayedTitle == selectedMediaType
            }) {
                mediaTypes[index].isSelected = true
            }
        }
        
        presenter?.presentMediaTypes(mediaTypes: mediaTypes)
    }
    
}
