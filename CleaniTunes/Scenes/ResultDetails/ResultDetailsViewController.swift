//
//  ResultDetailsViewController.swift
//  CleaniTunes
//
//  Created by hager gamal on 1/29/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import AVKit

protocol ResultDetailsDisplayLogic: class {
    func displayResultDetails(viewModel: ResultDetails.GetDetails.ViewModel)
}

class ResultDetailsViewController: UIViewController, ResultDetailsDisplayLogic {
    
    @IBOutlet weak var imageView: UIImageView!
    @IBOutlet weak var typeLabel: UILabel!
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var artistLabel: UILabel!
    @IBOutlet weak var descriptionLabel: UILabel!
    @IBOutlet weak var playButton: UIButton!
    @IBOutlet weak var descriptionContainerView: UIStackView!
    var interactor: ResultDetailsBusinessLogic?
    var router: (NSObjectProtocol & ResultDetailsRoutingLogic & ResultDetailsDataPassing)?
    var details: ResultDetails.GetDetails.ViewModel.Details!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = ResultDetailsInteractor()
        let presenter = ResultDetailsPresenter()
        let router = ResultDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.title = "Details"
        getDetails()
    }
    
    @IBAction func playButtonTapped(_ sender: Any) {
        if let url = details.previewUrl {
            let player = AVPlayer(url: url)
            let playerViewController = AVPlayerViewController()
            playerViewController.player = player
            
            present(playerViewController, animated: true) {
                playerViewController.player?.play()
            }
        }
    }
    
    func getDetails() {
        interactor?.getResult()
    }
    
    func displayResultDetails(viewModel: ResultDetails.GetDetails.ViewModel) {
        details = viewModel.displayedDetails
        
        imageView.kf.setImage(with: viewModel.displayedDetails.trackImageURL)
        typeLabel.text = viewModel.displayedDetails.wrapperType
        nameLabel.text = viewModel.displayedDetails.trackName
        artistLabel.text = viewModel.displayedDetails.artistName
        if let longDescription = viewModel.displayedDetails.longDescription {
            descriptionContainerView.isHidden = false
            descriptionLabel.text = longDescription
        }
        
        playButton.isHidden = details.previewUrl?.absoluteString.isEmpty != false
    }
}
